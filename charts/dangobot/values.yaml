# Default values for dangobot.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# This is to override the chart name.
nameOverride: ""
fullnameOverride: ""

bot:
  # This will set the replicaset count more information can be found here: https://kubernetes.io/docs/concepts/workloads/controllers/replicaset/
  replicaCount: 1

  # This sets the container image more information can be found here: https://kubernetes.io/docs/concepts/containers/images/
  image:
    repository: ghcr.io/liquidpl/dangobot
    # This sets the pull policy for images.
    pullPolicy: IfNotPresent
    # Overrides the image tag whose default is the chart appVersion.
    tag: "latest"

  # This is for the secretes for pulling an image from a private repository more information can be found here: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
  imagePullSecrets: []

  # This is for setting Kubernetes Annotations to a Pod.
  # For more information checkout: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
  podAnnotations: {}
  # This is for setting Kubernetes Labels to a Pod.
  # For more information checkout: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
  podLabels: {}

  database:
    host: dangobot
    port: 5432
    name: dangobot
    username: dangobot
    # use an externally provided secret in production
    # existingSecret:
    passwordKey: password
    password: dangobot

  persistence:
    enabled: true
    existingClaim: ~
    storageClass: ~
    size: 1Gi
    accessMode: ReadWriteOnce
    retain: false

  secrets:
    existingSecret: ~

    botTokenKey: botToken
    botToken: asdf

    djangoSecretKey: djangoSecret
    djangoSecret: insertactuallysecuresecretkeyhere

  config:
    description: ''
    commandPrefix: '!'
    # make sure to wrap this in quotes
    ownerId: ~
    sendErrors: false

  resources: {}
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi

  # This is to setup the liveness and readiness probes more information can be found here: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/
  # livenessProbe:
  #   httpGet:
  #     path: /
  #     port: http
  # readinessProbe:
  #   httpGet:
  #     path: /
  #     port: http

  # Additional volumes on the output Deployment definition.
  volumes: []
  # - name: foo
  #   secret:
  #     secretName: mysecret
  #     optional: false

  # Additional volumeMounts on the output Deployment definition.
  volumeMounts: []
  # - name: foo
  #   mountPath: "/etc/foo"
  #   readOnly: true

  nodeSelector: {}

  tolerations: []

  affinity: {}

postgresql:
  enabled: true
  global:
    postgresql:
      auth:
        username: dangobot
        database: dangobot
        # use an externally provided secret in production
        # existingSecret:
        password: dangobot
  primary:
    persistence:
      size: 100Mi
