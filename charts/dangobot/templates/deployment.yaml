apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "dangobot.fullname" . }}
  labels:
    {{- include "dangobot.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.bot.replicaCount }}
  selector:
    matchLabels:
      {{- include "dangobot.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.bot.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "dangobot.labels" . | nindent 8 }}
        {{- with .Values.bot.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- with .Values.bot.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.bot.image.repository }}:{{ .Values.bot.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.bot.image.pullPolicy }}
          env:
            - name: DATABASE_HOST
              value: {{ if .Values.postgresql.enabled }}{{ .Release.Name }}-postgresql{{ else }}{{ .Values.bot.database.host }}{{ end }}
            - name: DATABASE_PORT
              value: '{{ .Values.postgresql.enabled | ternary 5432 .Values.bot.database.port }}'
            - name: DATABASE_NAME
              value: {{ .Values.postgresql.enabled | ternary .Values.postgresql.global.postgresql.auth.database .Values.bot.database.name }}
            - name: DATABASE_USER
              value: {{ .Values.postgresql.enabled | ternary .Values.postgresql.global.postgresql.auth.username .Values.bot.database.name }}
            - name: DATABASE_PASSWORD
              {{ if and .Values.postgresql.enabled .Values.postgresql.global.postgresql.auth.existingSecret -}}
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.postgresql.global.postgresql.auth.existingSecret }}
                  key: {{ .Values.postgresql.global.postgresql.auth.secretKeys.userPasswordKey | default .Values.postgresql.auth.secretKeys.userPasswordKey }}
              {{- else if .Values.postgresql.enabled -}}
              value: {{ .Values.postgresql.global.postgresql.auth.password }}
              {{- else if and (not .Values.postgresql.enabled) .Values.bot.database.existingSecret -}}
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.bot.database.existingSecret }}
                  key: {{ .Values.bot.database.passwordKey }}
              {{- else -}}
              value: {{ .Values.bot.database.password }}
              {{- end }}
            - name: SECRET_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ include "dangobot.secretName" . }}
                  key: {{ .Values.bot.secrets.djangoSecretKey }}
            - name: BOT_TOKEN
              valueFrom:
                secretKeyRef:
                  name: {{ include "dangobot.secretName" . }}
                  key: {{ .Values.bot.secrets.botTokenKey }}
            - name: DESCRIPTION
              valueFrom:
                configMapKeyRef:
                 name: {{ include "dangobot.fullname" . }}
                 key: description
            - name: COMMAND_PREFIX
              valueFrom:
                configMapKeyRef:
                 name: {{ include "dangobot.fullname" . }}
                 key: commandPrefix
            - name: OWNER_ID
              valueFrom:
                configMapKeyRef:
                 name: {{ include "dangobot.fullname" . }}
                 key: ownerId
                 optional: true
            - name: SEND_ERRORS
              valueFrom:
                configMapKeyRef:
                 name: {{ include "dangobot.fullname" . }}
                 key: sendErrors
          resources:
            {{- toYaml .Values.bot.resources | nindent 12 }}
          volumeMounts:
            - name: media
              mountPath: /dangobot/media
            {{- with .Values.bot.volumeMounts }}
            {{- toYaml . | nindent 12 }}
            {{- end }}
      volumes:
        - name: media
          persistentVolumeClaim:
            claimName: {{ include "dangobot.persistentVolumeClaimName" . }}
        {{- with .Values.bot.volumes }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      {{- with .Values.bot.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.bot.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.bot.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
